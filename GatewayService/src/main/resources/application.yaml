server:
  port: 8080
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**, /api/v1/order-details/**, /api/v1/promotions/**
          filters:
            - AuthenticationFilter
#            - name: Retry
#              args:
#                  retries: 3                    # số lần retry
#                  statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR
#                  methods: GET, POST
#                  backoff:
#                    firstBackoff: 2s           # lần retry đầu sau 2 giây
#                    maxBackoff: 5s             # tối đa 5 giây giữa các lần
#                    factor: 2
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**, /api/v1/reviews/**,/api/v1/suppliers/**,/api/v1/specifications/**,/api/v1/categories/**,/api/v1/inventories/**,/api/v1/reviews/public**,/api/v1/suppliers/public**,/api/v1/specifications/public**,/api/v1/categories/public**,/api/v1/inventories/public**,/api/v1/products/public**
          filters:
            - AuthenticationFilter
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenish-rate: 1 #5 request/second
#                redis-rate-limiter.burst-capacity: 20 #10 request
#                key-resolver: "#{@ipKeyResolver}"
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/api/v1/carts/**, /api/v1/cart-items/**
          filters:
            - AuthenticationFilter
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - AuthenticationFilter
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**, /api/v1/auth/**, /api/v1/address/**
          filters:
            - AuthenticationFilter
            - PreserveHostHeader
        - id: media-service
          uri: forward:/
          predicates:
            - Path=/api/v1/media/**
          filters:
            - AuthenticationFilter
jwt:
  token:
    validity: 86400000
  secretKey: ${SECRET_KEY}
  expiration: 86400000
  header: Authorization
  prefix: Bearer
  refresh-token:
    expiration: 604800000
eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
instance:
  preferIpAddress: true
cloudinary:
  cloud_name: ${CLOUD_NAME}
  api_key: ${API_KEY}
  api_secret: ${API_SECRET}
  folder: Bicycle-E-commerce
logging:
  level:
    org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory: DEBUG
    org.springframework.cloud.gateway: DEBUG  # (Tùy chọn - để xem thêm log khác)
    reactor.netty.http.client: DEBUG          # (Tùy chọn - log client request/response)